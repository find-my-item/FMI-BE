plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.springdoc.openapi-gradle-plugin' version '1.9.0'
}

group = 'com.fmi'
version = '0.0.1-SNAPSHOT'
description = 'Find My Item 백엔드 (Spring Boot)'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Generate OpenAPI spec from running app (Method B)
openApi {
	// springdoc가 노출하는 런타임 스펙 엔드포인트 (YAML)
	apiDocsUrl.set("http://localhost:8080/v3/api-docs.yaml")
	// 산출물 위치/파일명
	outputDir.set(file("$projectDir/docs"))
	outputFileName.set("openapi.yaml")
	// 앱 기동 대기 시간(초)
	waitTimeInSeconds.set(60)
}

// Prism/Swagger UI Docker compose helpers
tasks.register('prismUp', Exec) {
    description = 'docker-compose.prism.yml로 Prism/Swagger UI를 백그라운드 실행'
    workingDir = projectDir
    commandLine 'bash', '-lc', 'docker compose -f docker-compose.prism.yml up -d'
}

tasks.register('prismRestart', Exec) {
    description = 'docs/openapi.yaml 변경 사항 반영을 위해 Prism/Swagger UI 컨테이너 재시작'
    workingDir = projectDir
    commandLine 'bash', '-lc', 'docker compose -f docker-compose.prism.yml restart'
}

tasks.register('prismDown', Exec) {
    description = 'Prism/Swagger UI 컨테이너 중지 및 제거'
    workingDir = projectDir
    commandLine 'bash', '-lc', 'docker compose -f docker-compose.prism.yml down'
}
